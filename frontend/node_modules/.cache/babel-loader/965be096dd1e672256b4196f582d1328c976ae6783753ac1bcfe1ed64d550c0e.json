{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savyn\\\\Desktop\\\\learning-app\\\\frontend\\\\src\\\\components\\\\LearnNewWords.mjs\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport '../styles.css';\nimport origin from '../config/config.mjs';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst wordsLimit = 5;\nfunction LearnNewWords() {\n  _s();\n  console.log('start');\n  const location = useLocation();\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  console.log(location.pathname);\n  useEffect(() => {\n    console.log('useEffect');\n    fetchWords();\n  }, [location.pathname]);\n  const fetchWords = async () => {\n    console.log('fetching words');\n    try {\n      const response = await axios.get(`${origin}/api/words`);\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n\n  // const resetWord = (index, resetWordId) => {\n  //   const existingWords = [...words];\n  //   axios\n  //     .post(`${origin}/api/anotherword`, {\n  //       words: existingWords,\n  //       wordId: resetWordId?.toString(),\n  //     })\n  //     .then((res) => {\n  //       console.log(res.data);\n  //       const newWords = words.toSpliced(index, 1, res.data);\n  //       setWords(newWords);\n  //     })\n  //     .catch((error) => console.error('Error fetching words:', error));\n  // };\n\n  // const learnWord = () => {\n  //   console.log(currentWordIndex);\n  //   setCurrentWordIndex((prevIndex) => prevIndex + 1);\n  // };\n\n  // const addWordToCollection = (word) => {\n  //   axios\n  //     .post(`${origin}/api/word`, {\n  //       word: {\n  //         word: word.word,\n  //         meaning: word.meaning,\n  //         wordIdFromCommonDB: word._id,\n  //       },\n  //     })\n  //     .then((res) => console.log(res.data))\n  //     .catch((error) =>\n  //       console.error('Error adding word to collection:', error)\n  //     );\n  // };\n\n  const currentWord = words[currentWordIndex] || null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: currentWordIndex < wordsLimit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        word: currentWord.word,\n        meaning: currentWord.meaning,\n        id: currentWord._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          addWordToCollection(currentWord);\n          learnWord();\n          toast.success('Word added!', {\n            position: 'top-right',\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'light',\n            transition: Bounce\n          });\n        },\n        children: \"Start learning this word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        newestOnTop: false,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true,\n        theme: \"light\",\n        transition: Bounce\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          resetWord(currentWordIndex, currentWord._id);\n        },\n        children: \"I already know this word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nice job!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(LearnNewWords, \"wgEt0uQSG02fToFgoRgPZSWVgUE=\", false, function () {\n  return [useLocation];\n});\n_c = LearnNewWords;\nexport default LearnNewWords;\nvar _c;\n$RefreshReg$(_c, \"LearnNewWords\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","ToastContainer","toast","Bounce","axios","Card","origin","jsxDEV","_jsxDEV","Fragment","_Fragment","wordsLimit","LearnNewWords","_s","console","log","location","words","setWords","currentWordIndex","setCurrentWordIndex","pathname","fetchWords","response","get","data","error","currentWord","className","children","word","meaning","id","_id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","addWordToCollection","learnWord","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","newestOnTop","rtl","pauseOnFocusLoss","resetWord","_c","$RefreshReg$"],"sources":["C:/Users/savyn/Desktop/learning-app/frontend/src/components/LearnNewWords.mjs"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport '../styles.css';\nimport origin from '../config/config.mjs';\n\nconst wordsLimit = 5;\n\nfunction LearnNewWords() {\n  console.log('start');\n\n  const location = useLocation();\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n\n  console.log(location.pathname);\n\n  useEffect(() => {\n    console.log('useEffect');\n    fetchWords();\n  }, [location.pathname]);\n\n  const fetchWords = async () => {\n    console.log('fetching words');\n    try {\n      const response = await axios.get(`${origin}/api/words`);\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n\n  // const resetWord = (index, resetWordId) => {\n  //   const existingWords = [...words];\n  //   axios\n  //     .post(`${origin}/api/anotherword`, {\n  //       words: existingWords,\n  //       wordId: resetWordId?.toString(),\n  //     })\n  //     .then((res) => {\n  //       console.log(res.data);\n  //       const newWords = words.toSpliced(index, 1, res.data);\n  //       setWords(newWords);\n  //     })\n  //     .catch((error) => console.error('Error fetching words:', error));\n  // };\n\n  // const learnWord = () => {\n  //   console.log(currentWordIndex);\n  //   setCurrentWordIndex((prevIndex) => prevIndex + 1);\n  // };\n\n  // const addWordToCollection = (word) => {\n  //   axios\n  //     .post(`${origin}/api/word`, {\n  //       word: {\n  //         word: word.word,\n  //         meaning: word.meaning,\n  //         wordIdFromCommonDB: word._id,\n  //       },\n  //     })\n  //     .then((res) => console.log(res.data))\n  //     .catch((error) =>\n  //       console.error('Error adding word to collection:', error)\n  //     );\n  // };\n\n  const currentWord = words[currentWordIndex] || null;\n\n  return (\n    <div className=\"app\">\n      {currentWordIndex < wordsLimit ? (\n        <>\n          <Card\n            word={currentWord.word}\n            meaning={currentWord.meaning}\n            id={currentWord._id}\n          />\n          <button\n            onClick={() => {\n              addWordToCollection(currentWord);\n              learnWord();\n              toast.success('Word added!', {\n                position: 'top-right',\n                autoClose: 2000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: 'light',\n                transition: Bounce,\n              });\n            }}\n          >\n            Start learning this word\n          </button>\n          <ToastContainer\n            position=\"top-right\"\n            autoClose={2000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            theme=\"light\"\n            transition={Bounce}\n          />\n\n          <button\n            onClick={() => {\n              resetWord(currentWordIndex, currentWord._id);\n            }}\n          >\n            I already know this word\n          </button>\n        </>\n      ) : (\n        <p>Nice job!</p>\n      )}\n    </div>\n  );\n}\n\nexport default LearnNewWords;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}