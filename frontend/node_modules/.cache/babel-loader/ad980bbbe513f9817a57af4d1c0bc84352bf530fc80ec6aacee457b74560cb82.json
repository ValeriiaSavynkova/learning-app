{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savyn\\\\Desktop\\\\learning-app\\\\frontend\\\\src\\\\components\\\\LearnNewWords.mjs\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport { NavLink } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './LearnAndReview.css';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport origin from '../config/config.mjs';\nimport getDateTimestamp from '../config/getTimestamp.mjs';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LearnNewWords() {\n  _s();\n  console.log('start');\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const now = getDateTimestamp();\n  const toastOptions = {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n    transition: Bounce\n  };\n  useEffect(() => {\n    console.log('useEffect');\n    (async function () {\n      try {\n        const response = await axios.post(`${origin}/api/first-render`, {\n          date: now\n        });\n        console.log(`isFirstRender: ${response.data.isFirstRender}`);\n        if (response.data.isFirstRender) {\n          console.log('Fetching new words');\n          fetchNewWords();\n        } else {\n          console.log('Fetching today’s words');\n          fetchTodayWords();\n        }\n      } catch (error) {\n        console.error('Error fetching words:', error);\n      }\n    })();\n  }, []);\n  const fetchNewWords = async () => {\n    console.log('fetching new words');\n    try {\n      const response = await axios.post(`${origin}/api/new-words`, {\n        date: now\n      });\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchTodayWords = async () => {\n    console.log('fetching today words');\n    try {\n      const response = await axios.post(`${origin}/api/today-words`, {\n        date: now\n      });\n      setWords(response.data.words);\n      setCurrentWordIndex(response.data.currentIndex);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const resetWord = async (index, resetWordId, word) => {\n    try {\n      const existingWords = [...words];\n      const response = await axios.post(`${origin}/api/anotherword`, {\n        words: existingWords,\n        wordId: resetWordId === null || resetWordId === void 0 ? void 0 : resetWordId.toString(),\n        date: now,\n        index\n      });\n      if (response.data.success) {\n        toast.info(`Word '${word}' will no longer be shown!`, toastOptions);\n        const newWords = words.toSpliced(index, 1, response.data.word);\n        setWords(newWords);\n      }\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n  const addWordToCollection = async word => {\n    console.log('adding word to collection');\n    try {\n      const response = await axios.post(`${origin}/api/word`, {\n        word: {\n          word: word.word,\n          meaning: word.meaning,\n          lastReviewedAt: now,\n          nextReviewAt: now + 24 * 60 * 60 * 1000,\n          // + 1 day\n          reviewCount: 0,\n          wordIdFromCommonDB: word._id\n        },\n        date: now\n      });\n      if (response.data.added) {\n        toast.success(`Word '${word.word}' added!`, toastOptions);\n        setCurrentWordIndex(prevIndex => prevIndex + 1);\n      } else {\n        toast.error(`Word '${word.word}' didn't add!`, toastOptions);\n      }\n    } catch (error) {\n      console.error('Error adding word to collection:', error);\n    }\n  };\n  const currentWord = words[currentWordIndex] || null;\n  console.log(currentWordIndex);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"learn-new-words\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this) : currentWordIndex < words.length - 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Learn new words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        word: currentWord === null || currentWord === void 0 ? void 0 : currentWord.word,\n        meaning: currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning,\n        id: currentWord === null || currentWord === void 0 ? void 0 : currentWord._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            addWordToCollection(currentWord);\n          },\n          children: \"Start learning this word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button secondary\",\n          onClick: () => {\n            resetWord(currentWordIndex, currentWord._id, currentWord.word);\n          },\n          children: \"I already know this word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"completion-message\",\n        children: \"Nice job!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        className: \"nav-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-icon\",\n          children: \"\\uD83C\\uDFE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-title\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/review\",\n        className: \"nav-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-icon\",\n          children: \"\\u21BB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-title\",\n          children: \"Review words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(LearnNewWords, \"QkMx5AOHJ1fakmx9xLmPr1HdLLQ=\");\n_c = LearnNewWords;\nexport default LearnNewWords;\nvar _c;\n$RefreshReg$(_c, \"LearnNewWords\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","Bounce","NavLink","axios","Card","origin","getDateTimestamp","jsxDEV","_jsxDEV","Fragment","_Fragment","LearnNewWords","_s","console","log","words","setWords","currentWordIndex","setCurrentWordIndex","isLoading","setIsLoading","now","toastOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","response","post","date","data","isFirstRender","fetchNewWords","fetchTodayWords","error","currentIndex","resetWord","index","resetWordId","word","existingWords","wordId","toString","success","info","newWords","toSpliced","addWordToCollection","meaning","lastReviewedAt","nextReviewAt","reviewCount","wordIdFromCommonDB","_id","added","prevIndex","currentWord","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","id","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/savyn/Desktop/learning-app/frontend/src/components/LearnNewWords.mjs"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport { NavLink } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './LearnAndReview.css';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport origin from '../config/config.mjs';\nimport getDateTimestamp from '../config/getTimestamp.mjs';\n\nfunction LearnNewWords() {\n  console.log('start');\n\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const now = getDateTimestamp();\n\n  const toastOptions = {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n    transition: Bounce,\n  };\n\n  useEffect(() => {\n    console.log('useEffect');\n\n    (async function () {\n      try {\n        const response = await axios.post(`${origin}/api/first-render`, {\n          date: now,\n        });\n        console.log(`isFirstRender: ${response.data.isFirstRender}`);\n\n        if (response.data.isFirstRender) {\n          console.log('Fetching new words');\n\n          fetchNewWords();\n        } else {\n          console.log('Fetching today’s words');\n\n          fetchTodayWords();\n        }\n      } catch (error) {\n        console.error('Error fetching words:', error);\n      }\n    })();\n  }, []);\n\n  const fetchNewWords = async () => {\n    console.log('fetching new words');\n    try {\n      const response = await axios.post(`${origin}/api/new-words`, {\n        date: now,\n      });\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const fetchTodayWords = async () => {\n    console.log('fetching today words');\n    try {\n      const response = await axios.post(`${origin}/api/today-words`, {\n        date: now,\n      });\n      setWords(response.data.words);\n      setCurrentWordIndex(response.data.currentIndex);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const resetWord = async (index, resetWordId, word) => {\n    try {\n      const existingWords = [...words];\n      const response = await axios.post(`${origin}/api/anotherword`, {\n        words: existingWords,\n        wordId: resetWordId?.toString(),\n        date: now,\n        index,\n      });\n      if (response.data.success) {\n        toast.info(`Word '${word}' will no longer be shown!`, toastOptions);\n        const newWords = words.toSpliced(index, 1, response.data.word);\n        setWords(newWords);\n      }\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n\n  const addWordToCollection = async (word) => {\n    console.log('adding word to collection');\n    try {\n      const response = await axios.post(`${origin}/api/word`, {\n        word: {\n          word: word.word,\n          meaning: word.meaning,\n          lastReviewedAt: now,\n          nextReviewAt: now + 24 * 60 * 60 * 1000, // + 1 day\n          reviewCount: 0,\n          wordIdFromCommonDB: word._id,\n        },\n        date: now,\n      });\n      if (response.data.added) {\n        toast.success(`Word '${word.word}' added!`, toastOptions);\n        setCurrentWordIndex((prevIndex) => prevIndex + 1);\n      } else {\n        toast.error(`Word '${word.word}' didn't add!`, toastOptions);\n      }\n    } catch (error) {\n      console.error('Error adding word to collection:', error);\n    }\n  };\n\n  const currentWord = words[currentWordIndex] || null;\n\n  console.log(currentWordIndex);\n\n  return (\n    <div className=\"learn-new-words\">\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : currentWordIndex < words.length - 1 ? (\n        <>\n          <div>\n            <p>Learn new words</p>\n          </div>\n          <ToastContainer />\n          <Card\n            word={currentWord?.word}\n            meaning={currentWord?.meaning}\n            id={currentWord?._id}\n          />\n          <div className=\"button-container\">\n            <button\n              className=\"button\"\n              onClick={() => {\n                addWordToCollection(currentWord);\n              }}\n            >\n              Start learning this word\n            </button>\n            <button\n              className=\"button secondary\"\n              onClick={() => {\n                resetWord(currentWordIndex, currentWord._id, currentWord.word);\n              }}\n            >\n              I already know this word\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          <p className=\"completion-message\">Nice job!</p>\n          <NavLink to=\"/\" className=\"nav-link\">\n            <span className=\"nav-icon\">🏠</span>\n            <div className=\"nav-title\">Main</div>\n          </NavLink>\n          <NavLink to=\"/review\" className=\"nav-link\">\n            <span className=\"nav-icon\">↻</span>\n            <div className=\"nav-title\">Review words</div>\n          </NavLink>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default LearnNewWords;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}