{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savyn\\\\Desktop\\\\learning-app\\\\frontend\\\\src\\\\components\\\\ReviewWords.mjs\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport axios from 'axios';\nimport origin from '../config/config.mjs';\nimport getDateTimestamp from '../config/getTimestamp.mjs';\nimport Card from './Card.mjs';\nimport './LearnAndReview.css';\nimport WordsContext from './WordsContext.mjs';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ReviewWords(wordsNum) {\n  _s();\n  const {\n    setWordsForReview\n  } = useContext(WordsContext);\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const now = getDateTimestamp();\n  const reviewInterval = [1, 3, 7, 14, 30];\n  useEffect(() => {\n    console.log('useEffect');\n    fetchWords();\n  }, []);\n  const fetchWords = async () => {\n    console.log('fetching words to review');\n    try {\n      const response = await axios.post(`${origin}/api/review`, {\n        currentDate: now\n      });\n      console.log(response.data);\n      setWords(response.data);\n      setCurrentWordIndex(0);\n      setWordsForReview(response.data.length);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const reviewedWord = async word => {\n    try {\n      const response = await axios.post(`${origin}/api/review-update`, {\n        word: {\n          ...word,\n          reviewCount: word.reviewCount + 1,\n          lastReviewedAt: now,\n          nextReviewAt: now + reviewInterval[word.reviewCount] * 24 * 60 * 60 * 1000 // + 3, 7, 14, 30 days\n        }\n      });\n      if (response.data.updated) {\n        setCurrentWordIndex(prevIndex => prevIndex + 1);\n      }\n      throw new Error('Error post review word');\n    } catch (error) {\n      console.error('Error post review word:', error);\n    }\n  };\n  const missedWord = async (word, index) => {\n    console.log(word);\n    try {\n      const reviewCountUpdate = word.reviewCount > 3 ? 3 : word.reviewCount === 3 ? 2 : 1;\n      const missedWord = {\n        ...word,\n        reviewCount: reviewCountUpdate,\n        lastReviewedAt: now,\n        nextReviewAt: now + reviewInterval[reviewCountUpdate] * 24 * 60 * 60 * 1000 // + 3, 7, 14, 30 days\n      };\n      const response = await axios.post(`${origin}/api/review-update`, {\n        word: missedWord\n      });\n      if (response.data.updated) {\n        const wordsForReview = [...words];\n        wordsForReview.splice(index, 1);\n        wordsForReview.push(missedWord);\n        setWords(wordsForReview);\n        setCurrentWordIndex(prevIndex => prevIndex);\n      } else {\n        throw new Error('Error post review word');\n      }\n    } catch (error) {\n      console.error('Error post review word:', error);\n    }\n  };\n  const currentWord = words[currentWordIndex] || null;\n  const progressPercentage = currentWordIndex / (words === null || words === void 0 ? void 0 : words.length) * 100;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : currentWordIndex < words.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Review words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          style: {\n            width: `${progressPercentage}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-text\",\n          children: [currentWordIndex, \" words reviewed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        word: currentWord === null || currentWord === void 0 ? void 0 : currentWord.word,\n        meaning: currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning,\n        id: currentWord === null || currentWord === void 0 ? void 0 : currentWord._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            reviewedWord(currentWord);\n          },\n          children: \"Got it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button secondary\",\n          onClick: () => {\n            missedWord(currentWord, currentWordIndex);\n          },\n          children: \"Don't remember this word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"completion-message\",\n        children: \"Nice job!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        className: \"nav-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-icon\",\n          children: \"\\uD83C\\uDFE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-title\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/new-words\",\n        className: \"nav-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-icon\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-title\",\n          children: \"Learn new words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewWords, \"t0FHnYk2BfvfPBpCBjMFt2guMwY=\");\n_c = ReviewWords;\nexport default ReviewWords;\nvar _c;\n$RefreshReg$(_c, \"ReviewWords\");","map":{"version":3,"names":["React","useState","useEffect","useContext","NavLink","axios","origin","getDateTimestamp","Card","WordsContext","jsxDEV","_jsxDEV","Fragment","_Fragment","ReviewWords","wordsNum","_s","setWordsForReview","words","setWords","currentWordIndex","setCurrentWordIndex","isLoading","setIsLoading","now","reviewInterval","console","log","fetchWords","response","post","currentDate","data","length","error","reviewedWord","word","reviewCount","lastReviewedAt","nextReviewAt","updated","prevIndex","Error","missedWord","index","reviewCountUpdate","wordsForReview","splice","push","currentWord","progressPercentage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","meaning","id","_id","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/savyn/Desktop/learning-app/frontend/src/components/ReviewWords.mjs"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport origin from '../config/config.mjs';\r\nimport getDateTimestamp from '../config/getTimestamp.mjs';\r\nimport Card from './Card.mjs';\r\nimport './LearnAndReview.css';\r\nimport WordsContext from './WordsContext.mjs';\r\n\r\nfunction ReviewWords(wordsNum) {\r\n  const { setWordsForReview } = useContext(WordsContext);\r\n\r\n  const [words, setWords] = useState([]);\r\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const now = getDateTimestamp();\r\n  const reviewInterval = [1, 3, 7, 14, 30];\r\n\r\n  useEffect(() => {\r\n    console.log('useEffect');\r\n    fetchWords();\r\n  }, []);\r\n\r\n  const fetchWords = async () => {\r\n    console.log('fetching words to review');\r\n    try {\r\n      const response = await axios.post(`${origin}/api/review`, {\r\n        currentDate: now,\r\n      });\r\n      console.log(response.data);\r\n\r\n      setWords(response.data);\r\n      setCurrentWordIndex(0);\r\n      setWordsForReview(response.data.length);\r\n    } catch (error) {\r\n      console.error('Error fetching words:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const reviewedWord = async (word) => {\r\n    try {\r\n      const response = await axios.post(`${origin}/api/review-update`, {\r\n        word: {\r\n          ...word,\r\n          reviewCount: word.reviewCount + 1,\r\n          lastReviewedAt: now,\r\n          nextReviewAt:\r\n            now + reviewInterval[word.reviewCount] * 24 * 60 * 60 * 1000, // + 3, 7, 14, 30 days\r\n        },\r\n      });\r\n      if (response.data.updated) {\r\n        setCurrentWordIndex((prevIndex) => prevIndex + 1);\r\n      }\r\n      throw new Error('Error post review word');\r\n    } catch (error) {\r\n      console.error('Error post review word:', error);\r\n    }\r\n  };\r\n\r\n  const missedWord = async (word, index) => {\r\n    console.log(word);\r\n    try {\r\n      const reviewCountUpdate =\r\n        word.reviewCount > 3 ? 3 : word.reviewCount === 3 ? 2 : 1;\r\n\r\n      const missedWord = {\r\n        ...word,\r\n        reviewCount: reviewCountUpdate,\r\n        lastReviewedAt: now,\r\n        nextReviewAt:\r\n          now + reviewInterval[reviewCountUpdate] * 24 * 60 * 60 * 1000, // + 3, 7, 14, 30 days\r\n      };\r\n\r\n      const response = await axios.post(`${origin}/api/review-update`, {\r\n        word: missedWord,\r\n      });\r\n\r\n      if (response.data.updated) {\r\n        const wordsForReview = [...words];\r\n        wordsForReview.splice(index, 1);\r\n        wordsForReview.push(missedWord);\r\n        setWords(wordsForReview);\r\n        setCurrentWordIndex((prevIndex) => prevIndex);\r\n      } else {\r\n        throw new Error('Error post review word');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error post review word:', error);\r\n    }\r\n  };\r\n\r\n  const currentWord = words[currentWordIndex] || null;\r\n\r\n  const progressPercentage = (currentWordIndex / words?.length) * 100;\r\n\r\n  return (\r\n    <div className=\"review\">\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : currentWordIndex < words.length ? (\r\n        <>\r\n          <div>\r\n            <p>Review words</p>\r\n          </div>\r\n          <div className=\"progress-bar-container\">\r\n            <div\r\n              className=\"progress-bar\"\r\n              style={{ width: `${progressPercentage}%` }}\r\n            ></div>\r\n            <span className=\"progress-text\">\r\n              {currentWordIndex} words reviewed\r\n            </span>\r\n          </div>\r\n          <Card\r\n            word={currentWord?.word}\r\n            meaning={currentWord?.meaning}\r\n            id={currentWord?._id}\r\n          />\r\n          <div className=\"button-container\">\r\n            <button\r\n              className=\"button\"\r\n              onClick={() => {\r\n                reviewedWord(currentWord);\r\n              }}\r\n            >\r\n              Got it\r\n            </button>\r\n            <button\r\n              className=\"button secondary\"\r\n              onClick={() => {\r\n                missedWord(currentWord, currentWordIndex);\r\n              }}\r\n            >\r\n              Don't remember this word\r\n            </button>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p className=\"completion-message\">Nice job!</p>\r\n          <NavLink to=\"/\" className=\"nav-link\">\r\n            <span className=\"nav-icon\">🏠</span>\r\n            <div className=\"nav-title\">Main</div>\r\n          </NavLink>\r\n          <NavLink to=\"/new-words\" className=\"nav-link\">\r\n            <span className=\"nav-icon\">+</span>\r\n            <div className=\"nav-title\">Learn new words</div>\r\n          </NavLink>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReviewWords;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}