{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savyn\\\\Desktop\\\\learning-app\\\\frontend\\\\src\\\\components\\\\LearnNewWords.mjs\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport { NavLink } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './LearnAndReview.css';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport origin from '../config/config.mjs';\nimport getDateTimestamp from '../config/getTimestamp.mjs';\nimport WordsContext from './WordsContext.mjs';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LearnNewWords() {\n  _s();\n  console.log('start');\n  const {\n    setLearnedWords\n  } = useContext(WordsContext);\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    console.log('useEffect');\n    fetchWords();\n    setLearnedWords(0);\n  }, []);\n  const fetchWords = async () => {\n    console.log('fetching words');\n    try {\n      const response = await axios.get(`${origin}/api/new-words`);\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n  const resetWord = async (index, resetWordId, word) => {\n    try {\n      const existingWords = [...words];\n      const response = await axios.post(`${origin}/api/anotherword`, {\n        words: existingWords,\n        wordId: resetWordId === null || resetWordId === void 0 ? void 0 : resetWordId.toString()\n      });\n      if (response.data) {\n        toast.info(`Word '${word}' will no longer be shown!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce\n        });\n        const newWords = words.toSpliced(index, 1, response.data);\n        setWords(newWords);\n      }\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n  const learnWord = () => {\n    console.log(currentWordIndex);\n    setCurrentWordIndex(prevIndex => prevIndex + 1);\n    setLearnedWords(learnedWords => learnedWords + 1);\n  };\n  const addWordToCollection = async word => {\n    try {\n      const now = getDateTimestamp();\n      const response = await axios.post(`${origin}/api/word`, {\n        word: {\n          word: word.word,\n          meaning: word.meaning,\n          lastReviewedAt: now,\n          nextReviewAt: now + 24 * 60 * 60 * 1000,\n          // + 1 day\n          reviewCount: 0,\n          wordIdFromCommonDB: word._id\n        }\n      });\n      if (response.data.added) {\n        toast.success(`Word '${word.word}' added!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce\n        });\n      } else {\n        toast.error(`Word '${word.word}' didn't add!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce\n        });\n      }\n    } catch (error) {\n      console.error('Error adding word to collection:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const currentWord = words[currentWordIndex] || null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"learn-new-words\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this) : currentWordIndex < words.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Learn new words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        word: currentWord === null || currentWord === void 0 ? void 0 : currentWord.word,\n        meaning: currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning,\n        id: currentWord === null || currentWord === void 0 ? void 0 : currentWord._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            addWordToCollection(currentWord);\n            learnWord();\n          },\n          children: \"Start learning this word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button secondary\",\n          onClick: () => {\n            resetWord(currentWordIndex, currentWord._id, currentWord.word);\n          },\n          children: \"I already know this word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"completion-message\",\n        children: \"Nice job!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        className: \"nav-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-icon\",\n          children: \"\\uD83C\\uDFE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-title\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/review\",\n        className: \"nav-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-icon\",\n          children: \"\\u21BB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-title\",\n          children: \"Review words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_s(LearnNewWords, \"rxgBsIjJ9z7HtY/MHoxNikQ3jco=\");\n_c = LearnNewWords;\nexport default LearnNewWords;\nvar _c;\n$RefreshReg$(_c, \"LearnNewWords\");","map":{"version":3,"names":["React","useState","useEffect","useContext","ToastContainer","toast","Bounce","NavLink","axios","Card","origin","getDateTimestamp","WordsContext","jsxDEV","_jsxDEV","Fragment","_Fragment","LearnNewWords","_s","console","log","setLearnedWords","words","setWords","currentWordIndex","setCurrentWordIndex","isLoading","setIsLoading","fetchWords","response","get","data","error","resetWord","index","resetWordId","word","existingWords","post","wordId","toString","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","newWords","toSpliced","learnWord","prevIndex","learnedWords","addWordToCollection","now","meaning","lastReviewedAt","nextReviewAt","reviewCount","wordIdFromCommonDB","_id","added","success","currentWord","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","id","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/savyn/Desktop/learning-app/frontend/src/components/LearnNewWords.mjs"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport { NavLink } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './LearnAndReview.css';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport origin from '../config/config.mjs';\nimport getDateTimestamp from '../config/getTimestamp.mjs';\nimport WordsContext from './WordsContext.mjs';\n\nfunction LearnNewWords() {\n  console.log('start');\n\n  const { setLearnedWords } = useContext(WordsContext);\n\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    console.log('useEffect');\n    fetchWords();\n    setLearnedWords(0);\n  }, []);\n\n  const fetchWords = async () => {\n    console.log('fetching words');\n    try {\n      const response = await axios.get(`${origin}/api/new-words`);\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n\n  const resetWord = async (index, resetWordId, word) => {\n    try {\n      const existingWords = [...words];\n      const response = await axios.post(`${origin}/api/anotherword`, {\n        words: existingWords,\n        wordId: resetWordId?.toString(),\n      });\n      if (response.data) {\n        toast.info(`Word '${word}' will no longer be shown!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce,\n        });\n        const newWords = words.toSpliced(index, 1, response.data);\n        setWords(newWords);\n      }\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n\n  const learnWord = () => {\n    console.log(currentWordIndex);\n    setCurrentWordIndex((prevIndex) => prevIndex + 1);\n    setLearnedWords((learnedWords) => learnedWords + 1);\n  };\n\n  const addWordToCollection = async (word) => {\n    try {\n      const now = getDateTimestamp();\n      const response = await axios.post(`${origin}/api/word`, {\n        word: {\n          word: word.word,\n          meaning: word.meaning,\n          lastReviewedAt: now,\n          nextReviewAt: now + 24 * 60 * 60 * 1000, // + 1 day\n          reviewCount: 0,\n          wordIdFromCommonDB: word._id,\n        },\n      });\n      if (response.data.added) {\n        toast.success(`Word '${word.word}' added!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce,\n        });\n      } else {\n        toast.error(`Word '${word.word}' didn't add!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce,\n        });\n      }\n    } catch (error) {\n      console.error('Error adding word to collection:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const currentWord = words[currentWordIndex] || null;\n\n  return (\n    <div className=\"learn-new-words\">\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : currentWordIndex < words.length ? (\n        <>\n          <div>\n            <p>Learn new words</p>\n          </div>\n          <ToastContainer />\n          <Card\n            word={currentWord?.word}\n            meaning={currentWord?.meaning}\n            id={currentWord?._id}\n          />\n          <div className=\"button-container\">\n            <button\n              className=\"button\"\n              onClick={() => {\n                addWordToCollection(currentWord);\n                learnWord();\n              }}\n            >\n              Start learning this word\n            </button>\n            <button\n              className=\"button secondary\"\n              onClick={() => {\n                resetWord(currentWordIndex, currentWord._id, currentWord.word);\n              }}\n            >\n              I already know this word\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          <p className=\"completion-message\">Nice job!</p>\n          <NavLink to=\"/\" className=\"nav-link\">\n            <span className=\"nav-icon\">🏠</span>\n            <div className=\"nav-title\">Main</div>\n          </NavLink>\n          <NavLink to=\"/review\" className=\"nav-link\">\n            <span className=\"nav-icon\">↻</span>\n            <div className=\"nav-title\">Review words</div>\n          </NavLink>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default LearnNewWords;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}