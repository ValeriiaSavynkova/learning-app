{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savyn\\\\Desktop\\\\learning-app\\\\frontend\\\\src\\\\components\\\\LearnNewWords.mjs\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport '../styles.css';\nimport origin from '../config/config.mjs';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst wordsLimit = 5;\nfunction LearnNewWords() {\n  _s();\n  console.log('start');\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  useEffect(() => {\n    console.log('useEffect');\n    fetchWords();\n  }, []);\n  const fetchWords = async () => {\n    console.log('fetching words');\n    try {\n      const response = await axios.get(`${origin}/api/words`);\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n  const resetWord = async (index, resetWordId) => {\n    try {\n      const existingWords = [...words];\n      const response = await axios.post(`${origin}/api/anotherword`, {\n        words: existingWords,\n        wordId: resetWordId === null || resetWordId === void 0 ? void 0 : resetWordId.toString()\n      });\n      const newWords = words.toSpliced(index, 1, response.data);\n      setWords(newWords);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n  const learnWord = () => {\n    console.log(currentWordIndex);\n    setCurrentWordIndex(prevIndex => prevIndex + 1);\n  };\n  const addWordToCollection = async word => {\n    try {\n      const response = axios.post(`${origin}/api/word`, {\n        word: {\n          word: word.word,\n          meaning: word.meaning,\n          wordIdFromCommonDB: word._id\n        }\n      });\n      if (response.headersSent) {\n        toast.success('Word added!', {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce\n        });\n      } else {\n        toast.error('Word not added!', {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce\n        });\n      }\n    } catch (error) {\n      console.error('Error adding word to collection:', error);\n    }\n  };\n  const currentWord = words[currentWordIndex] || null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: currentWordIndex < wordsLimit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        word: currentWord === null || currentWord === void 0 ? void 0 : currentWord.word,\n        meaning: currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning,\n        id: currentWord === null || currentWord === void 0 ? void 0 : currentWord._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          addWordToCollection(currentWord);\n          learnWord();\n        },\n        children: \"Start learning this word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          resetWord(currentWordIndex, currentWord._id);\n          toast.info('This word will no longer be shown!', {\n            position: 'top-right',\n            autoClose: 2000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'light',\n            transition: Bounce\n          });\n        },\n        children: \"I already know this word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nice job!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(LearnNewWords, \"YF0uYKjDgisp7gipsDp2T0TQhBM=\");\n_c = LearnNewWords;\nexport default LearnNewWords;\nvar _c;\n$RefreshReg$(_c, \"LearnNewWords\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","Bounce","axios","Card","origin","jsxDEV","_jsxDEV","Fragment","_Fragment","wordsLimit","LearnNewWords","_s","console","log","words","setWords","currentWordIndex","setCurrentWordIndex","fetchWords","response","get","data","error","resetWord","index","resetWordId","existingWords","post","wordId","toString","newWords","toSpliced","learnWord","prevIndex","addWordToCollection","word","meaning","wordIdFromCommonDB","_id","headersSent","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","currentWord","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","info","_c","$RefreshReg$"],"sources":["C:/Users/savyn/Desktop/learning-app/frontend/src/components/LearnNewWords.mjs"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport '../styles.css';\nimport origin from '../config/config.mjs';\n\nconst wordsLimit = 5;\n\nfunction LearnNewWords() {\n  console.log('start');\n\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n\n  useEffect(() => {\n    console.log('useEffect');\n    fetchWords();\n  }, []);\n\n  const fetchWords = async () => {\n    console.log('fetching words');\n    try {\n      const response = await axios.get(`${origin}/api/words`);\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n\n  const resetWord = async (index, resetWordId) => {\n    try {\n      const existingWords = [...words];\n      const response = await axios.post(`${origin}/api/anotherword`, {\n        words: existingWords,\n        wordId: resetWordId?.toString(),\n      });\n      const newWords = words.toSpliced(index, 1, response.data);\n      setWords(newWords);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n\n  const learnWord = () => {\n    console.log(currentWordIndex);\n    setCurrentWordIndex((prevIndex) => prevIndex + 1);\n  };\n\n  const addWordToCollection = async (word) => {\n    try {\n      const response = axios.post(`${origin}/api/word`, {\n        word: {\n          word: word.word,\n          meaning: word.meaning,\n          wordIdFromCommonDB: word._id,\n        },\n      });\n      if (response.headersSent) {\n        toast.success('Word added!', {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce,\n        });\n      } else {\n        toast.error('Word not added!', {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce,\n        });\n      }\n    } catch (error) {\n      console.error('Error adding word to collection:', error);\n    }\n  };\n\n  const currentWord = words[currentWordIndex] || null;\n\n  return (\n    <div className=\"app\">\n      {currentWordIndex < wordsLimit ? (\n        <>\n          <ToastContainer />\n          <Card\n            word={currentWord?.word}\n            meaning={currentWord?.meaning}\n            id={currentWord?._id}\n          />\n          <button\n            onClick={() => {\n              addWordToCollection(currentWord);\n              learnWord();\n            }}\n          >\n            Start learning this word\n          </button>\n\n          <button\n            onClick={() => {\n              resetWord(currentWordIndex, currentWord._id);\n              toast.info('This word will no longer be shown!', {\n                position: 'top-right',\n                autoClose: 2000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: true,\n                progress: undefined,\n                theme: 'light',\n                transition: Bounce,\n              });\n            }}\n          >\n            I already know this word\n          </button>\n        </>\n      ) : (\n        <p>Nice job!</p>\n      )}\n    </div>\n  );\n}\n\nexport default LearnNewWords;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}