{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savyn\\\\Desktop\\\\learning-app\\\\frontend\\\\src\\\\App.mjs\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card.mjs'; // Компонент карточки\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [word, setWord] = useState({});\n  useEffect(() => {\n    fetchWords();\n  }, []);\n  const fetchWords = () => {\n    fetch('http://localhost:5000/api/word').then(response => response.json()).then(data => setWord(data)).catch(error => console.error('Error fetching words:', error));\n  };\n\n  // try {\n  //   const response = await axios.get('http://localhost:5000/api/word');\n  //   setWord(response.data);\n  // } catch (error) {\n  //   console.error('Error fetching words:', error);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      word: word.word,\n      meaning: word.meaning,\n      examples: word.examples\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWords,\n      className: \"next-button\",\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"N+0qSO+DcKKSpkysEL5MHKVXm1k=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","App","_s","word","setWord","fetchWords","fetch","then","response","json","data","catch","error","console","className","children","meaning","examples","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/savyn/Desktop/learning-app/frontend/src/App.mjs"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card.mjs'; // Компонент карточки\nimport './styles.css';\n\nfunction App() {\n  const [word, setWord] = useState({});\n\n  useEffect(() => {\n    fetchWords();\n  }, []);\n\n  const fetchWords = () => {\n    fetch('http://localhost:5000/api/word')\n      .then((response) => response.json())\n      .then((data) => setWord(data))\n      .catch((error) => console.error('Error fetching words:', error));\n  };\n\n  // try {\n  //   const response = await axios.get('http://localhost:5000/api/word');\n  //   setWord(response.data);\n  // } catch (error) {\n  //   console.error('Error fetching words:', error);\n  // }\n\n  return (\n    <div className=\"app\">\n      <Card word={word.word} meaning={word.meaning} examples={word.examples} />\n      <button onClick={fetchWords} className=\"next-button\">\n        Next\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,YAAY,CAAC,CAAC;AAC/B,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACdQ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACvBC,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKN,OAAO,CAACM,IAAI,CAAC,CAAC,CAC7BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEZ,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA,CAACF,IAAI;MAACK,IAAI,EAAEA,IAAI,CAACA,IAAK;MAACa,OAAO,EAAEb,IAAI,CAACa,OAAQ;MAACC,QAAQ,EAAEd,IAAI,CAACc;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzErB,OAAA;MAAQsB,OAAO,EAAEjB,UAAW;MAACS,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAErD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACnB,EAAA,CA7BQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AA+BZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}