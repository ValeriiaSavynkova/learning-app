{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savyn\\\\Desktop\\\\learning-app\\\\frontend\\\\src\\\\components\\\\LearnNewWords.mjs\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { toast, Bounce } from 'react-toastify';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport '../styles.css';\nimport origin from '../config/config.mjs';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst wordsLimit = 5;\nfunction LearnNewWords() {\n  _s();\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  useEffect(() => {\n    console.log('fetching words');\n    const fetchWords = () => {\n      axios.get(`${origin}/api/words`).then(res => {\n        setWords(res.data);\n        setCurrentWordIndex(0);\n        console.log(words);\n      }).catch(error => console.error('Error fetching words:', error));\n    };\n    fetchWords();\n  }, [words]);\n  const resetWord = (index, resetWordId) => {\n    const existingWords = [...words];\n    axios.post(`${origin}/api/anotherword`, {\n      words: existingWords,\n      wordId: resetWordId === null || resetWordId === void 0 ? void 0 : resetWordId.toString()\n    }).then(res => {\n      console.log(res.data);\n      const newWords = words.toSpliced(index, 1, res.data);\n      setWords(newWords);\n    }).catch(error => console.error('Error fetching words:', error));\n  };\n  const learnWord = () => {\n    console.log(currentWordIndex);\n    setCurrentWordIndex(prevIndex => prevIndex + 1);\n  };\n  const addWordToCollection = word => {\n    axios.post(`${origin}/api/word`, {\n      word: {\n        word: word.word,\n        meaning: word.meaning,\n        wordIdFromCommonDB: word._id\n      }\n    }).then(res => console.log(res.data)).catch(error => console.error('Error adding word to collection:', error));\n  };\n  const currentWord = words[currentWordIndex] || null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: currentWordIndex < wordsLimit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        word: currentWord.word,\n        meaning: currentWord.meaning,\n        id: currentWord._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          addWordToCollection(currentWord);\n          learnWord();\n          // toast.success('Word added!', {\n          //   position: 'top-right',\n          //   autoClose: 2000,\n          //   hideProgressBar: false,\n          //   closeOnClick: true,\n          //   pauseOnHover: true,\n          //   draggable: true,\n          //   progress: undefined,\n          //   theme: 'light',\n          //   transition: Bounce,\n          // });\n        },\n        children: \"Start learning this word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          resetWord(currentWordIndex, currentWord._id);\n        },\n        children: \"I already know this word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Nice job!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(LearnNewWords, \"YF0uYKjDgisp7gipsDp2T0TQhBM=\");\n_c = LearnNewWords;\nexport default LearnNewWords;\nvar _c;\n$RefreshReg$(_c, \"LearnNewWords\");","map":{"version":3,"names":["React","useState","useEffect","toast","Bounce","axios","Card","origin","jsxDEV","_jsxDEV","Fragment","_Fragment","wordsLimit","LearnNewWords","_s","words","setWords","currentWordIndex","setCurrentWordIndex","console","log","fetchWords","get","then","res","data","catch","error","resetWord","index","resetWordId","existingWords","post","wordId","toString","newWords","toSpliced","learnWord","prevIndex","addWordToCollection","word","meaning","wordIdFromCommonDB","_id","currentWord","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/savyn/Desktop/learning-app/frontend/src/components/LearnNewWords.mjs"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { toast, Bounce } from 'react-toastify';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport '../styles.css';\nimport origin from '../config/config.mjs';\n\nconst wordsLimit = 5;\nfunction LearnNewWords() {\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n\n  useEffect(() => {\n    console.log('fetching words');\n    const fetchWords = () => {\n      axios\n        .get(`${origin}/api/words`)\n        .then((res) => {\n          setWords(res.data);\n          setCurrentWordIndex(0);\n          console.log(words);\n        })\n        .catch((error) => console.error('Error fetching words:', error));\n    };\n\n    fetchWords();\n  }, [words]);\n\n  const resetWord = (index, resetWordId) => {\n    const existingWords = [...words];\n    axios\n      .post(`${origin}/api/anotherword`, {\n        words: existingWords,\n        wordId: resetWordId?.toString(),\n      })\n      .then((res) => {\n        console.log(res.data);\n        const newWords = words.toSpliced(index, 1, res.data);\n        setWords(newWords);\n      })\n      .catch((error) => console.error('Error fetching words:', error));\n  };\n\n  const learnWord = () => {\n    console.log(currentWordIndex);\n    setCurrentWordIndex((prevIndex) => prevIndex + 1);\n  };\n\n  const addWordToCollection = (word) => {\n    axios\n      .post(`${origin}/api/word`, {\n        word: {\n          word: word.word,\n          meaning: word.meaning,\n          wordIdFromCommonDB: word._id,\n        },\n      })\n      .then((res) => console.log(res.data))\n      .catch((error) =>\n        console.error('Error adding word to collection:', error)\n      );\n  };\n  const currentWord = words[currentWordIndex] || null;\n\n  return (\n    <div className=\"app\">\n      {currentWordIndex < wordsLimit ? (\n        <>\n          <Card\n            word={currentWord.word}\n            meaning={currentWord.meaning}\n            id={currentWord._id}\n          />\n          <button\n            onClick={() => {\n              addWordToCollection(currentWord);\n              learnWord();\n              // toast.success('Word added!', {\n              //   position: 'top-right',\n              //   autoClose: 2000,\n              //   hideProgressBar: false,\n              //   closeOnClick: true,\n              //   pauseOnHover: true,\n              //   draggable: true,\n              //   progress: undefined,\n              //   theme: 'light',\n              //   transition: Bounce,\n              // });\n            }}\n          >\n            Start learning this word\n          </button>\n\n          <button\n            onClick={() => {\n              resetWord(currentWordIndex, currentWord._id);\n            }}\n          >\n            I already know this word\n          </button>\n        </>\n      ) : (\n        <p>Nice job!</p>\n      )}\n    </div>\n  );\n}\n\nexport default LearnNewWords;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}