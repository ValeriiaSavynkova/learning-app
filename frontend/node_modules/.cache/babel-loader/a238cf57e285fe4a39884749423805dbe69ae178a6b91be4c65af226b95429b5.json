{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savyn\\\\Desktop\\\\learning-app\\\\frontend\\\\src\\\\components\\\\LearnNewWords.mjs\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport { NavLink } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './LearnAndReview.css';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport origin from '../config/config.mjs';\nimport getDateTimestamp from '../config/getTimestamp.mjs';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LearnNewWords() {\n  _s();\n  console.log('start');\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [isFirstRender, setIsFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const now = getDateTimestamp();\n  const toastOptions = {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n    transition: Bounce\n  };\n  useEffect(() => {\n    console.log('useEffect');\n    (async function () {\n      try {\n        const response = await axios.post(`${origin}/api/first-render`, {\n          date: now\n        });\n        console.log(`isFirstRender: ${response.data.isFirstRender}`);\n        setIsFirstRender(response.data.isFirstRender);\n        if (response.data.isFirstRender) {\n          console.log('Fetching new words');\n          fetchNewWords();\n        } else {\n          console.log('Fetching today’s words');\n          fetchTodayWords();\n        }\n      } catch (error) {\n        console.error('Error fetching words:', error);\n      }\n    })();\n  }, []);\n  const fetchNewWords = async () => {\n    console.log('fetching new words');\n    try {\n      const response = await axios.post(`${origin}/api/new-words`, {\n        date: now\n      });\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchTodayWords = async () => {\n    console.log('fetching today words');\n    try {\n      const response = await axios.post(`${origin}/api/today-words`, {\n        date: now\n      });\n      setWords(response.data.words);\n      setCurrentWordIndex(response.data.currentIndex);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const resetWord = async (index, resetWordId, word) => {\n    try {\n      const existingWords = [...words];\n      const response = await axios.post(`${origin}/api/anotherword`, {\n        words: existingWords,\n        wordId: resetWordId === null || resetWordId === void 0 ? void 0 : resetWordId.toString(),\n        date: now\n      });\n      if (response.data) {\n        toast.info(`Word '${word}' will no longer be shown!`, toastOptions);\n        const newWords = words.toSpliced(index, 1, response.data);\n        setWords(newWords);\n      }\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n  const addWordToCollection = async word => {\n    console.log('adding word to collection');\n    try {\n      const response = await axios.post(`${origin}/api/word`, {\n        word: {\n          word: word.word,\n          meaning: word.meaning,\n          lastReviewedAt: now,\n          nextReviewAt: now + 24 * 60 * 60 * 1000,\n          // + 1 day\n          reviewCount: 0,\n          wordIdFromCommonDB: word._id\n        }\n      });\n      if (response.data.added) {\n        toast.success(`Word '${word.word}' added!`, toastOptions);\n        setCurrentWordIndex(prevIndex => prevIndex + 1);\n      } else {\n        toast.error(`Word '${word.word}' didn't add!`, toastOptions);\n      }\n    } catch (error) {\n      console.error('Error adding word to collection:', error);\n    }\n  };\n  const currentWord = words[currentWordIndex] || null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"learn-new-words\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : currentWordIndex < words.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Learn new words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        word: currentWord === null || currentWord === void 0 ? void 0 : currentWord.word,\n        meaning: currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning,\n        id: currentWord === null || currentWord === void 0 ? void 0 : currentWord._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            addWordToCollection(currentWord);\n          },\n          children: \"Start learning this word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button secondary\",\n          onClick: () => {\n            resetWord(currentWordIndex, currentWord._id, currentWord.word);\n          },\n          children: \"I already know this word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"completion-message\",\n        children: \"Nice job!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        className: \"nav-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-icon\",\n          children: \"\\uD83C\\uDFE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-title\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/review\",\n        className: \"nav-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-icon\",\n          children: \"\\u21BB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-title\",\n          children: \"Review words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(LearnNewWords, \"cgYl5/Y3RC0EnxqgZK7/omNEZRY=\");\n_c = LearnNewWords;\nexport default LearnNewWords;\nvar _c;\n$RefreshReg$(_c, \"LearnNewWords\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","Bounce","NavLink","axios","Card","origin","getDateTimestamp","jsxDEV","_jsxDEV","Fragment","_Fragment","LearnNewWords","_s","console","log","words","setWords","currentWordIndex","setCurrentWordIndex","isFirstRender","setIsFirstRender","isLoading","setIsLoading","now","toastOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","response","post","date","data","fetchNewWords","fetchTodayWords","error","currentIndex","resetWord","index","resetWordId","word","existingWords","wordId","toString","info","newWords","toSpliced","addWordToCollection","meaning","lastReviewedAt","nextReviewAt","reviewCount","wordIdFromCommonDB","_id","added","success","prevIndex","currentWord","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","id","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/savyn/Desktop/learning-app/frontend/src/components/LearnNewWords.mjs"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport { NavLink } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './LearnAndReview.css';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport origin from '../config/config.mjs';\nimport getDateTimestamp from '../config/getTimestamp.mjs';\n\nfunction LearnNewWords() {\n  console.log('start');\n\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [isFirstRender, setIsFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const now = getDateTimestamp();\n\n  const toastOptions = {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'light',\n    transition: Bounce,\n  };\n\n  useEffect(() => {\n    console.log('useEffect');\n\n    (async function () {\n      try {\n        const response = await axios.post(`${origin}/api/first-render`, {\n          date: now,\n        });\n        console.log(`isFirstRender: ${response.data.isFirstRender}`);\n\n        setIsFirstRender(response.data.isFirstRender);\n        if (response.data.isFirstRender) {\n          console.log('Fetching new words');\n\n          fetchNewWords();\n        } else {\n          console.log('Fetching today’s words');\n\n          fetchTodayWords();\n        }\n      } catch (error) {\n        console.error('Error fetching words:', error);\n      }\n    })();\n  }, []);\n\n  const fetchNewWords = async () => {\n    console.log('fetching new words');\n    try {\n      const response = await axios.post(`${origin}/api/new-words`, {\n        date: now,\n      });\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const fetchTodayWords = async () => {\n    console.log('fetching today words');\n    try {\n      const response = await axios.post(`${origin}/api/today-words`, {\n        date: now,\n      });\n      setWords(response.data.words);\n      setCurrentWordIndex(response.data.currentIndex);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const resetWord = async (index, resetWordId, word) => {\n    try {\n      const existingWords = [...words];\n      const response = await axios.post(`${origin}/api/anotherword`, {\n        words: existingWords,\n        wordId: resetWordId?.toString(),\n        date: now,\n      });\n      if (response.data) {\n        toast.info(`Word '${word}' will no longer be shown!`, toastOptions);\n        const newWords = words.toSpliced(index, 1, response.data);\n        setWords(newWords);\n      }\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n\n  const addWordToCollection = async (word) => {\n    console.log('adding word to collection');\n    try {\n      const response = await axios.post(`${origin}/api/word`, {\n        word: {\n          word: word.word,\n          meaning: word.meaning,\n          lastReviewedAt: now,\n          nextReviewAt: now + 24 * 60 * 60 * 1000, // + 1 day\n          reviewCount: 0,\n          wordIdFromCommonDB: word._id,\n        },\n      });\n      if (response.data.added) {\n        toast.success(`Word '${word.word}' added!`, toastOptions);\n        setCurrentWordIndex((prevIndex) => prevIndex + 1);\n      } else {\n        toast.error(`Word '${word.word}' didn't add!`, toastOptions);\n      }\n    } catch (error) {\n      console.error('Error adding word to collection:', error);\n    }\n  };\n\n  const currentWord = words[currentWordIndex] || null;\n\n  return (\n    <div className=\"learn-new-words\">\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : currentWordIndex < words.length ? (\n        <>\n          <div>\n            <p>Learn new words</p>\n          </div>\n          <ToastContainer />\n          <Card\n            word={currentWord?.word}\n            meaning={currentWord?.meaning}\n            id={currentWord?._id}\n          />\n          <div className=\"button-container\">\n            <button\n              className=\"button\"\n              onClick={() => {\n                addWordToCollection(currentWord);\n              }}\n            >\n              Start learning this word\n            </button>\n            <button\n              className=\"button secondary\"\n              onClick={() => {\n                resetWord(currentWordIndex, currentWord._id, currentWord.word);\n              }}\n            >\n              I already know this word\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          <p className=\"completion-message\">Nice job!</p>\n          <NavLink to=\"/\" className=\"nav-link\">\n            <span className=\"nav-icon\">🏠</span>\n            <div className=\"nav-title\">Main</div>\n          </NavLink>\n          <NavLink to=\"/review\" className=\"nav-link\">\n            <span className=\"nav-icon\">↻</span>\n            <div className=\"nav-title\">Review words</div>\n          </NavLink>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default LearnNewWords;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}