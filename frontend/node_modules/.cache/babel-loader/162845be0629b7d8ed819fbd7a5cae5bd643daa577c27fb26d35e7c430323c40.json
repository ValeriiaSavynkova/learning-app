{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\savyn\\\\Desktop\\\\learning-app\\\\frontend\\\\src\\\\components\\\\LearnNewWords.mjs\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport { NavLink } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './LearnAndReview.css';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport origin from '../config/config.mjs';\nimport getDateTimestamp from '../config/getTimestamp.mjs';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LearnNewWords() {\n  _s();\n  console.log('start');\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  useEffect(() => {\n    console.log('useEffect');\n    fetchWords();\n  }, []);\n  const fetchWords = async () => {\n    console.log('fetching words');\n    try {\n      const response = await axios.get(`${origin}/api/new-words`);\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n  const resetWord = async (index, resetWordId, word) => {\n    try {\n      const existingWords = [...words];\n      const response = await axios.post(`${origin}/api/anotherword`, {\n        words: existingWords,\n        wordId: resetWordId === null || resetWordId === void 0 ? void 0 : resetWordId.toString()\n      });\n      if (response.data) {\n        toast.info(`Word '${word}' will no longer be shown!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce\n        });\n        const newWords = words.toSpliced(index, 1, response.data);\n        setWords(newWords);\n      }\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n  const learnWord = () => {\n    console.log(currentWordIndex);\n    setCurrentWordIndex(prevIndex => prevIndex + 1);\n  };\n  const addWordToCollection = async word => {\n    try {\n      const now = getDateTimestamp();\n      const response = await axios.post(`${origin}/api/word`, {\n        word: {\n          word: word.word,\n          meaning: word.meaning,\n          lastReviewedAt: now,\n          nextReviewAt: now + 24 * 60 * 60 * 1000,\n          // + 1 day\n          reviewCount: 0,\n          wordIdFromCommonDB: word._id\n        }\n      });\n      if (response.data.added) {\n        toast.success(`Word '${word.word}' added!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce\n        });\n      } else {\n        toast.error(`Word '${word.word}' didn't add!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce\n        });\n      }\n    } catch (error) {\n      console.error('Error adding word to collection:', error);\n    }\n  };\n  const currentWord = words[currentWordIndex] || null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"learn-new-words\",\n    children: currentWordIndex < words.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Learn new words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        word: currentWord === null || currentWord === void 0 ? void 0 : currentWord.word,\n        meaning: currentWord === null || currentWord === void 0 ? void 0 : currentWord.meaning,\n        id: currentWord === null || currentWord === void 0 ? void 0 : currentWord._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: () => {\n            addWordToCollection(currentWord);\n            learnWord();\n          },\n          children: \"Start learning this word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button secondary\",\n          onClick: () => {\n            resetWord(currentWordIndex, currentWord._id, currentWord.word);\n          },\n          children: \"I already know this word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"completion-message\",\n        children: \"Nice job!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/\",\n        className: \"nav-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-icon\",\n          children: \"\\uD83C\\uDFE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-title\",\n          children: \"Main\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n        to: \"/review\",\n        className: \"nav-link\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-icon\",\n          children: \"\\u21BB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nav-title\",\n          children: \"Review words\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(LearnNewWords, \"YF0uYKjDgisp7gipsDp2T0TQhBM=\");\n_c = LearnNewWords;\nexport default LearnNewWords;\nvar _c;\n$RefreshReg$(_c, \"LearnNewWords\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","Bounce","NavLink","axios","Card","origin","getDateTimestamp","jsxDEV","_jsxDEV","Fragment","_Fragment","LearnNewWords","_s","console","log","words","setWords","currentWordIndex","setCurrentWordIndex","fetchWords","response","get","data","error","resetWord","index","resetWordId","word","existingWords","post","wordId","toString","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","newWords","toSpliced","learnWord","prevIndex","addWordToCollection","now","meaning","lastReviewedAt","nextReviewAt","reviewCount","wordIdFromCommonDB","_id","added","success","currentWord","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","to","_c","$RefreshReg$"],"sources":["C:/Users/savyn/Desktop/learning-app/frontend/src/components/LearnNewWords.mjs"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ToastContainer, toast, Bounce } from 'react-toastify';\nimport { NavLink } from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './LearnAndReview.css';\nimport axios from 'axios';\nimport Card from './Card.mjs';\nimport origin from '../config/config.mjs';\nimport getDateTimestamp from '../config/getTimestamp.mjs';\n\nfunction LearnNewWords() {\n  console.log('start');\n\n  const [words, setWords] = useState([]);\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n\n  useEffect(() => {\n    console.log('useEffect');\n    fetchWords();\n  }, []);\n\n  const fetchWords = async () => {\n    console.log('fetching words');\n    try {\n      const response = await axios.get(`${origin}/api/new-words`);\n      setWords(response.data);\n      setCurrentWordIndex(0);\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n\n  const resetWord = async (index, resetWordId, word) => {\n    try {\n      const existingWords = [...words];\n      const response = await axios.post(`${origin}/api/anotherword`, {\n        words: existingWords,\n        wordId: resetWordId?.toString(),\n      });\n      if (response.data) {\n        toast.info(`Word '${word}' will no longer be shown!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce,\n        });\n        const newWords = words.toSpliced(index, 1, response.data);\n        setWords(newWords);\n      }\n    } catch (error) {\n      console.error('Error fetching words:', error);\n    }\n  };\n\n  const learnWord = () => {\n    console.log(currentWordIndex);\n    setCurrentWordIndex((prevIndex) => prevIndex + 1);\n  };\n\n  const addWordToCollection = async (word) => {\n    try {\n      const now = getDateTimestamp();\n      const response = await axios.post(`${origin}/api/word`, {\n        word: {\n          word: word.word,\n          meaning: word.meaning,\n          lastReviewedAt: now,\n          nextReviewAt: now + 24 * 60 * 60 * 1000, // + 1 day\n          reviewCount: 0,\n          wordIdFromCommonDB: word._id,\n        },\n      });\n      if (response.data.added) {\n        toast.success(`Word '${word.word}' added!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce,\n        });\n      } else {\n        toast.error(`Word '${word.word}' didn't add!`, {\n          position: 'top-right',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n          transition: Bounce,\n        });\n      }\n    } catch (error) {\n      console.error('Error adding word to collection:', error);\n    }\n  };\n\n  const currentWord = words[currentWordIndex] || null;\n\n  return (\n    <div className=\"learn-new-words\">\n      {currentWordIndex < words.length ? (\n        <>\n          <div>\n            <p>Learn new words</p>\n          </div>\n          <ToastContainer />\n          <Card\n            word={currentWord?.word}\n            meaning={currentWord?.meaning}\n            id={currentWord?._id}\n          />\n          <div className=\"button-container\">\n            <button\n              className=\"button\"\n              onClick={() => {\n                addWordToCollection(currentWord);\n                learnWord();\n              }}\n            >\n              Start learning this word\n            </button>\n            <button\n              className=\"button secondary\"\n              onClick={() => {\n                resetWord(currentWordIndex, currentWord._id, currentWord.word);\n              }}\n            >\n              I already know this word\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          <p className=\"completion-message\">Nice job!</p>\n          <NavLink to=\"/\" className=\"nav-link\">\n            <span className=\"nav-icon\">🏠</span>\n            <div className=\"nav-title\">Main</div>\n          </NavLink>\n          <NavLink to=\"/review\" className=\"nav-link\">\n            <span className=\"nav-icon\">↻</span>\n            <div className=\"nav-title\">Review words</div>\n          </NavLink>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default LearnNewWords;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}